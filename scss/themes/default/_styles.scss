// Commons Styles
:root {
  // Typography
  --pico-font-family: system-ui, -apple-system, "Segoe UI", "Roboto", "Ubuntu",
    "Cantarell", "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji",
    "Segoe UI Symbol", "Noto Color Emoji";
  --pico-line-height: 1.5;
  --pico-font-weight: 400;
  --pico-font-size: 16px;

  // Responsive typography
  @if $enable-responsive-typography {
    @if map-get($breakpoints, "sm") {
      @media (min-width: map-get($breakpoints, "sm")) {
        --pico-font-size: 17px;
      }
    }

    @if map-get($breakpoints, "md") {
      @media (min-width: map-get($breakpoints, "md")) {
        --pico-font-size: 18px;
      }
    }

    @if map-get($breakpoints, "lg") {
      @media (min-width: map-get($breakpoints, "lg")) {
        --pico-font-size: 19px;
      }
    }

    @if map-get($breakpoints, "xl") {
      @media (min-width: map-get($breakpoints, "xl")) {
        --pico-font-size: 20px;
      }
    }
  }

  // Borders
  --pico-border-radius: 0.25rem;
  --pico-border-width: 1px;
  --pico-outline-width: 3px;

  // Spacings
  --pico-spacing: 1rem;

  // Spacings for typography elements
  --pico-typography-spacing-vertical: 1.5rem;

  // Spacings for body > header, body > main, body > footer, section, article
  --pico-block-spacing-vertical: calc(var(--pico-spacing) * 2);
  --pico-block-spacing-horizontal: var(--pico-spacing);

  @if ($enable-classes and $enable-grid) {
    --pico-grid-spacing-vertical: 0;
    --pico-grid-spacing-horizontal: var(--pico-spacing);
  }

  // Spacings for form elements and button
  --pico-form-element-spacing-vertical: 0.75rem;
  --pico-form-element-spacing-horizontal: 1rem;

  // Spacings for nav component
  --pico-nav-element-spacing-vertical: 1rem;
  --pico-nav-element-spacing-horizontal: 0.5rem;
  --pico-nav-link-spacing-vertical: 0.5rem;
  --pico-nav-link-spacing-horizontal: 0.5rem;

  // Font weight for form labels & fieldsets legend
  --pico-form-label-font-weight: var(--pico-font-weight);

  // Transitions
  --pico-transition: 0.2s ease-in-out;
}

// Responsives spacings
@if $enable-responsive-spacings {
  // Sectionning
  body > header,
  body > main,
  body > footer,
  section {
    @if map-get($breakpoints, "sm") {
      @media (min-width: map-get($breakpoints, "sm")) {
        --pico-block-spacing-vertical: calc(var(--pico-spacing) * 2.5);
      }
    }

    @if map-get($breakpoints, "md") {
      @media (min-width: map-get($breakpoints, "md")) {
        --pico-block-spacing-vertical: calc(var(--pico-spacing) * 3);
      }
    }

    @if map-get($breakpoints, "lg") {
      @media (min-width: map-get($breakpoints, "lg")) {
        --pico-block-spacing-vertical: calc(var(--pico-spacing) * 3.5);
      }
    }

    @if map-get($breakpoints, "xl") {
      @media (min-width: map-get($breakpoints, "xl")) {
        --pico-block-spacing-vertical: calc(var(--pico-spacing) * 4);
      }
    }
  }

  // Card (<article>)
  article {
    @if map-get($breakpoints, "sm") {
      @media (min-width: map-get($breakpoints, "sm")) {
        --pico-block-spacing-horizontal: calc(var(--pico-spacing) * 1.25);
      }
    }

    @if map-get($breakpoints, "md") {
      @media (min-width: map-get($breakpoints, "md")) {
        --pico-block-spacing-horizontal: calc(var(--pico-spacing) * 1.5);
      }
    }

    @if map-get($breakpoints, "lg") {
      @media (min-width: map-get($breakpoints, "lg")) {
        --pico-block-spacing-horizontal: calc(var(--pico-spacing) * 1.75);
      }
    }

    @if map-get($breakpoints, "xl") {
      @media (min-width: map-get($breakpoints, "xl")) {
        --pico-block-spacing-horizontal: calc(var(--pico-spacing) * 2);
      }
    }
  }

  // Modal
  dialog > article {

    --pico-block-spacing-vertical: calc(var(--pico-spacing) * 2);
    --pico-block-spacing-horizontal: var(--pico-spacing);

    @if map-get($breakpoints, "sm") {
      @media (min-width: map-get($breakpoints, "sm")) {
        --pico-block-spacing-vertical: calc(var(--pico-spacing) * 2.5);
        --pico-block-spacing-horizontal: calc(var(--pico-spacing) * 1.25);
      }
    }

    @if map-get($breakpoints, "md") {
      @media (min-width: map-get($breakpoints, "md")) {
        --pico-block-spacing-vertical: calc(var(--pico-spacing) * 3);
        --pico-block-spacing-horizontal: calc(var(--pico-spacing) * 1.5);
      }
    }
  }
}

// Link
a {
  --pico-text-decoration: none;

  // Secondary & Contrast
  @if $enable-classes {
    &.secondary,
    &.contrast {
      --pico-text-decoration: underline;
    }
  }
}

// Small
small {
  --pico-font-size: 0.875em;
}

// Headings
h1,
h2,
h3,
h4,
h5,
h6 {
  --pico-font-weight: 700;
}

h1 {
  --pico-font-size: 2rem;
  --pico-typography-spacing-vertical: 3rem;
}

h2 {
  --pico-font-size: 1.75rem;
  --pico-typography-spacing-vertical: 2.625rem;
}

h3 {
  --pico-font-size: 1.5rem;
  --pico-typography-spacing-vertical: 2.25rem;
}

h4 {
  --pico-font-size: 1.25rem;
  --pico-typography-spacing-vertical: 1.874rem;
}

h5 {
  --pico-font-size: 1.125rem;
  --pico-typography-spacing-vertical: 1.6875rem;
}

// Forms elements
[type="checkbox"],
[type="radio"] {
  --pico-border-width: 2px;
}

[type="checkbox"][role="switch"] {
  --pico-border-width: 3px;
}

// Table
thead,
tfoot {
  th,
  td {
    --pico-border-width: 3px;
  }
}

:not(thead):not(tfoot) > * > td {
  --pico-font-size: 0.875em;
}

// Code
pre,
code,
kbd,
samp {
  --pico-font-family: "Menlo", "Consolas", "Roboto Mono", "Ubuntu Monospace",
    "Noto Mono", "Oxygen Mono", "Liberation Mono", monospace,
    "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
}

kbd {
  --pico-font-weight: bolder;
}
